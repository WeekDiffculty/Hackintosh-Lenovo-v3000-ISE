
#B1B2  method
into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;

# RECB method
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

#WECB method
into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

#16bit registers
into device label EC0 code_regex B1RC,\s+16, replace_matched begin BRC0,8,BRC1,8, end;
into device label EC0 code_regex B1FV,\s+16, replace_matched begin BFV0,8,BFV1,8, end;
into device label EC0 code_regex B1DC,\s+16, replace_matched begin BDC0,8,BDC1,8, end;
into device label EC0 code_regex B1FC,\s+16, replace_matched begin BFC0,8,BFC1,8, end;
into device label EC0 code_regex B1AC,\s+16, replace_matched begin BAC0,8,BAC1,8, end;
into device label EC0 code_regex B1DV,\s+16, replace_matched begin BDV0,8,BDV1,8, end;

#16bit methods
into method label _BST code_regex \(B1RC, replaceall_matched begin (B1B2(BRC0,BRC1), end;
into method label SMTF code_regex \(B1RC, replaceall_matched begin (B1B2(BRC0,BRC1), end;
into method label _BST code_regex \(B1FV, replaceall_matched begin (B1B2(BFV0,BFV1), end;
into method label SMTF code_regex \(B1FV, replaceall_matched begin (B1B2(BFV0,BFV1), end;
into method label _BIF code_regex \(B1DV, replaceall_matched begin (B1B2(BDV0,BDV1), end;
into method label _BIF code_regex \(B1DC, replaceall_matched begin (B1B2(BDC0,BDC1), end;
into method label SMTF code_regex \(B1FC, replaceall_matched begin (B1B2(BFC0,BFC1), end;
into method label _BIF code_regex \(B1FC, replaceall_matched begin (B1B2(BFC0,BFC1), end;
into method label _BST code_regex \(B1AC, replaceall_matched begin (B1B2(BAC0,BAC1), end;
into method label SMTF code_regex \(B1AC, replaceall_matched begin (B1B2(BAC0,BAC1), end;

#64bit RECB 
into method label GBID code_regex \(FWBT, replaceall_matched begin (RECB(0x14,64), end;
into method label MHIF code_regex \(FWBT, replaceall_matched begin (RECB(0x14,64), end;

#256bit RECB/WECB
into method label MHPF code_regex \(SMDA, replaceall_matched begin (RECB (0x63, 0x0100), end;
into method label MHPF code_regex Store\s+\(FB4\,.*  replaceall_matched begin WECB (0x63, 0x0100, FB4)  end;
